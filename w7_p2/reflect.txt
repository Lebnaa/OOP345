// Name: Lebna Noori 
// Seneca Student ID: 157672205
// Seneca email: lnoori1@myseneca.ca
// Date of completion: Nov.9th 
//
// I confirm that I am the only author of this file and the content was created entirely by me.

Reflections 

All STL function used in this workshop:

accumulate - To sum up the number of deaths and cases in the word and per country if one is provided 
for_each - To display all Covids in the collection and to accumulate cases and deaths.
sort - 	To sort the collection based on received criteria, like country.
any_of	- For function inCollection to indicate wheather there exists a country with a specified variant with more than the amount of deaths specified.
copy_if	- To copy from collection to a new list any covid statistic with more deaths than provided.
transform - To change the severity in each Covid in the collection to the corresponding one depending on number of deaths.


if i wrote the logics myself the code would've been much longer and would've taken a lot of time, and for some algorithms it would also be much slower. 
using algorithms that was provided saved a lot of time with coming up with logic, and are much more efficient.


I would rewrite the sorting function to accept a list or a collection of consts representing proper fields in order, so that the user doesn't enter a invalid field. That clients would be forced to select from an initial set of valid choices in this way, and trying to use an incorrect field would result in an error at build time. 
